{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alert","alert","typ","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b94f3bcc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              onClick={props.toggleMode}\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n             Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"new text\";//wrong way\r\n  // setText(\"new Text\");/Correct way\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"UpperCase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!\",\"success\");\r\n  };\r\n  const handleLowClick = () => {\r\n    // console.log(\"UpperCase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase!\",\"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:props.mode==='dark'?'white':'grey'}}>\r\n        <h1>{props.heading}</h1>\r\n\r\n        <div className=\"mb-3 my-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'grey'}}\r\n\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\" btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\" btn btn-primary mx-2\" onClick={handleLowClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'grey'}}>\r\n        <h1>Your text summmary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read </p>\r\n        <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something to preview it\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() +lower.slice(1);\r\n    }\r\n    return (    \r\n         props.alert &&   <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(props.alert.typ)} </strong>:{props.alert.msg} \r\n         </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from 'react';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');//whether dark mode is enabled or not \n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n\n    setAlert({\n      msg:message,\n      typ:type\n    })\n    setTimeout(() => {\n      setAlert(null)\n      \n    }, 3000);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode ==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#090a1f'\n      showAlert(\"Dark mode has been enabled\",\"success\")\n      document.title = 'TextUtils - Dark Mode'\n      setInterval(() => {\n        document.title = 'TextUtils is Amazing Mode'\n      }, 2300);\n      setInterval(() => {\n        document.title = 'Install TextUtils  Now'\n      }, 1500);\n\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light mode has been enabled\",\"success\")\n      document.title = 'TextUtils - Light Mode'\n\n\n    }\n  }\n\n\n  return (\n    <>\n     {/* <Navbar title=\"Textutils2\" aboutText=\"About me\"/> */}\n     {/* <Navbar/> */}\n     {/* <Router> */}\n     <Navbar title=\"Textutils2\" aboutText=\"About me\" mode={mode} toggleMode={toggleMode}/>\n     <Alert alert={alert}/> \n     <div className=\"container my-3\">\n     {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n     <TextForm heading=\"Enter the text to analysise below \" showAlert={showAlert} mode={mode}/>\n          {/* </Route> */}\n        {/* </Switch> */}\n     </div>\n     {/* </Router> */}\n    </>\n  );\n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}